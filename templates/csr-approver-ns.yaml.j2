apiVersion: v1
kind: Namespace
metadata:
  name: ocp-csr-approver
  labels:
    app: csr-approver
    pod-security.kubernetes.io/enforce: privileged
    pod-security.kubernetes.io/audit: privileged
    pod-security.kubernetes.io/warn: privileged
  annotations:
    openshift.io/node-selector: ''
---
kind: ServiceAccount
apiVersion: v1
metadata:
  name: ocp-csr-approver
  namespace: ocp-csr-approver
  labels:
    app: ocp-csr-approver
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: ocp-csr-approver
  namespace: ocp-csr-approver
  labels:
    app: ocp-csr-approver
rules:
- apiGroups:
  - certificates.k8s.io
  resources:
  - certificatesigningrequests
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - certificates.k8s.io
  resources:
  - certificatesigningrequests/approval
  verbs:
  - update
- apiGroups:
  - certificates.k8s.io
  resources:
  - signers
  resourceNames:
  - kubernetes.io/kube-apiserver-client-kubelet
  - kubernetes.io/kubelet-serving
  verbs:
  - approve
---
apiVersion: rbac.authorization.k8s.io/v1
kind: RoleBinding
metadata:
  name: ocp-csr-approver-privileged
  namespace: ocp-csr-approver
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: system:openshift:scc:privileged
subjects:
- kind: ServiceAccount
  name: ocp-csr-approver
  namespace: ocp-csr-approver
---
kind: ClusterRoleBinding
apiVersion: rbac.authorization.k8s.io/v1
metadata:
  name: ocp-csr-approver
  namespace: ocp-csr-approver
  labels:
    app: ocp-csr-approver
subjects:
  - kind: ServiceAccount
    name: ocp-csr-approver
    namespace: ocp-csr-approver
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: ocp-csr-approver
---
kind: CronJob
apiVersion: batch/v1
metadata:
  name: ocp-csr-approver
  namespace: ocp-csr-approver
  labels:
    app: ocp-csr-approver
spec:
  schedule: "* * * * *"
  concurrencyPolicy: Forbid
  successfulJobsHistoryLimit: 1
  failedJobsHistoryLimit: 1
  jobTemplate:
    metadata:
      labels:
        app: ocp-csr-approver
    spec:
      backoffLimit: 0
      template:
        metadata:
          labels:
            app: ocp-csr-approver
        spec:
          containers:
            - name: approver
              image: "registry.redhat.io/openshift4/ose-cli:v4.14"
              securityContext:
                privileged: true
              command:
                - "/bin/bash"
                - "-c"
                - for csr in $(oc get csr --no-headers | grep -i -v -E "approved" | awk '{print $1}') ; do oc adm certificate approve ${csr} ; done
          restartPolicy: "Never"
          terminationGracePeriodSeconds: 30
          activeDeadlineSeconds: 600
          dnsPolicy: "ClusterFirst"
          serviceAccountName: "ocp-csr-approver"
          serviceAccount: "ocp-csr-approver"